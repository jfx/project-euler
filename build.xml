<project name="pe" default="build">
    
    <property environment="env"/>
    <property name="workspace" value="${env.WORKSPACE}"/>
    <property name="build.number" value="${env.BUILD_NUMBER}"/>

    <property name="projectdir" value="."/>
    <property name="src" value="${projectdir}/src"/>
    <property name="bin" value="${projectdir}/bin"/>
    <property name="testdir" value="${projectdir}/RFTests"/>
    <property name="vendor.bin" value="${projectdir}/vendor/bin"/>
    <property name="docker.pe.name" value="jfxs/project-euler"/>
    <property name="docker.tag" value="latest"/>
    <property name="docker.projectdir" value="/app"/>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${workspace}/build/robot"/>
        <delete dir="${workspace}/build/logs"/>
    </target>
    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${workspace}/build/robot"/>
        <mkdir dir="${workspace}/build/logs"/>
    </target>
        
    <target name="check" depends="prepare,update,phpcsfixer,lint,phpcs,phpmd"/>
    <target name="unittest" depends="prepare,phpunit"/>
    <target name="qatest" depends="prepare,rftest"/>
    <target name="docker" depends="prepare,docker.clean,docker.build"/>
    <target name="dockerunittest" depends="prepare,docker.phpunit"/>
    <target name="dockerqatest" depends="prepare,compose.start,rftest,compose.stop"/>

    <target name="update">
        <exec executable="php" dir="${projectdir}">
            <arg value="composer.phar"/>
            <arg value="self-update"/>
        </exec>
        <exec executable="php" dir="${projectdir}">
            <arg value="composer.phar"/>
            <arg value="update"/>
        </exec>
    </target>    
    <target name="phpcsfixer">
        <exec executable="${vendor.bin}/php-cs-fixer" dir="${projectdir}">
            <arg value="fix"/>
            <arg value="-v"/>
            <arg value="--config=sf23"/>
            <arg value="${projectdir}"/>
        </exec>
    </target>
    <target name="lint">
        <apply executable="php" failonerror="true" dir="${projectdir}">
            <arg value="-l"/>
            <fileset dir="${src}">
                <include name="**/*.php"/>
                <modified/>
            </fileset>
        </apply>
    </target>
    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer">
        <exec executable="${vendor.bin}/phpcs" dir="${projectdir}">
            <arg value="-v"/>
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${workspace}/build/logs/checkstyle.xml"/>
            <arg value="--standard=${projectdir}/Standards/ruleset-cs.xml"/>
            <arg value="--extensions=php"/>
            <arg path="${src}"/>
        </exec>
    </target>
    <target name="phpmd" description="Generate PHP Mess Detector report">
        <exec executable="${vendor.bin}/phpmd" dir="${projectdir}">
            <arg value="${src}"/>
            <arg value="xml"/>
            <arg value="${projectdir}/Standards/ruleset-pmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="${workspace}/build/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpunit">
        <exec executable="${vendor.bin}/phpunit" failonerror="true" dir="${projectdir}">
            <arg value="-c"/>
            <arg value="${projectdir}"/>
            <arg value="--log-junit"/>
            <arg value="${workspace}/build/logs/junit.xml"/>
        </exec>
    </target>

    <target name="rftest" description="Robot Framework tests">
        <tstamp>
            <format property="time.start" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>
        <echo message="Time : ${time.start} - Starting tests..."/>
        <exec executable="pybot">
            <arg value="-i"/>
            <arg value="${property.tag}"/>
            <arg value="--outputdir"/>
            <arg value="${workspace}/build/robot"/>
            <arg value="--xunit"/>
            <arg value="${workspace}/build/logs/junit.xml"/>
            <arg value="${testdir}"/>
        </exec>
        <tstamp>
            <format property="time.end" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>
        <echo message="Time : ${time.end} - Ending tests."/>
    </target>    
       
    <target name="docker.clean">
        <exec executable="/bin/sh">
            <arg value="-c" />
            <arg value="docker rm -f $(docker ps -a -f IMAGE=${docker.pe.name} -q)"/>
        </exec>
        <sleep seconds="1"/>
        <exec executable="docker" dir="${projectdir}">
            <arg value="rmi"/>
            <arg value="${docker.pe.name}:${docker.tag}"/>
        </exec>
        <exec executable="docker-compose" dir="${projectdir}">
            <arg value="down"/>
            <arg value="--rmi"/>
            <arg value="local"/>
        </exec>
    </target>
      
    <target name="docker.build">
        <exec executable="docker" failonerror="true" dir="${projectdir}">
            <arg value="build"/>
            <arg value="--pull"/>
            <arg value="-t"/>
            <arg value="${docker.pe.name}:${docker.tag}"/>
            <arg value="-f"/>
            <arg value="./Dockerfile-Github-Oauth"/>
            <arg value="--build-arg"/>
            <arg value="GITHUB_OAUTH=${GITHUB_TOKEN}"/>
            <arg value="."/>
        </exec>
    </target>
    
    <target name="docker.phpunit">
        <exec executable="docker" failonerror="false">
            <arg value="rm"/>
            <arg value="phpunit"/>
        </exec>
        <exec executable="docker" failonerror="true">
            <arg value="run"/>
            <arg value="--name"/>
            <arg value="phpunit"/>
            <arg value="-d"/>
            <arg value="${docker.pe.name}"/>
            <arg value="${docker.projectdir}/bin/runUnitTests"/>
        </exec>
        <sleep seconds="1"/>
        <exec executable="docker" failonerror="true">
            <arg value="cp" />
            <arg value="phpunit:/tmp/junit.xml" />
            <arg value="${workspace}/build/logs/junit.xml" />
        </exec>
    </target>
    
    <target name="compose.start">
        <tstamp>
            <format property="time.start" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>
        <echo message="Time : ${time.start} - Starting compose build..."/>
        <exec executable="docker-compose" dir="${projectdir}" failonerror="true">
            <env key="GITHUB_OAUTH" value="${GITHUB_TOKEN}"/>
            <arg value="build"/>
            <arg value="--pull"/>
        </exec>
        <exec executable="docker-compose" dir="${projectdir}" failonerror="true">
            <arg value="up"/>
            <arg value="-d"/>
        </exec>
        <waitfor maxwait="3" maxwaitunit="minute">
            <http url="http://localhost:5001/resolve/1"/>
        </waitfor>
        <tstamp>
            <format property="time.end" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>
        <echo message="Time : ${time.end} - Ending compose build."/>
    </target>
    
    <target name="compose.stop">
        <exec executable="docker-compose" dir="${projectdir}" failonerror="false">
            <arg value="down"/>
        </exec>
    </target>
</project>